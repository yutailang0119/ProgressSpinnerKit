//
//  Spinner.swift
//  ProgressSpinnerKit
//
//  Created by Yutaro Muta on 2018/08/25.
//

public struct Spinner {
    private let kind: Kind
    private var cursor: Int

    public init(kind: Kind) {
        self.kind = kind
        self.cursor = 0
    }

    var frame: String {
        mutating get {
            defer {
                cursor += 1
            }
            return " " + kind.frames[cursor % kind.length] + " "
        }
    }

    mutating func reset() {
        cursor = 0
    }

    public enum Kind: CaseIterable {
        case box1
        case box2
        case box3
        case box4
        case box5
        case box6
        case box7
        case bar1
        case bar2
        case bar3
        case bar4
        case bar5
        case bar6
        case spin1
        case spin2
        case spin3
        case spin4
        case spin5
        case spin6
        case spin7
        case spin8
        case spin9
        case spin10
        case spin11
        case spin12
        case spin13
        case spin14

        fileprivate var frames: [String] {
            switch self {
            case .box1:
                // ⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏
                return ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
            case .box2:
                // ⠋⠙⠚⠞⠖⠦⠴⠲⠳⠓
                return ["⠋", "⠙", "⠚", "⠞", "⠖", "⠦", "⠴", "⠲", "⠳", "⠓"]
            case .box3:
                // ⠄⠆⠇⠋⠙⠸⠰⠠⠰⠸⠙⠋⠇⠆
                return ["⠄", "⠆", "⠇", "⠋", "⠙", "⠸", "⠰", "⠠", "⠰", "⠸", "⠙", "⠋", "⠇", "⠆"]
            case .box4:
                // ⠋⠙⠚⠒⠂⠂⠒⠲⠴⠦⠖⠒⠐⠐⠒⠓⠋
                return ["⠋", "⠙", "⠚", "⠒", "⠂", "⠂", "⠒", "⠲", "⠴", "⠦", "⠖", "⠒", "⠐", "⠐", "⠒", "⠓", "⠋"]
            case .box5:
                // ⠁⠉⠙⠚⠒⠂⠂⠒⠲⠴⠤⠄⠄⠤⠴⠲⠒⠂⠂⠒⠚⠙⠉⠁
                return ["⠁", "⠉", "⠙", "⠚", "⠒", "⠂", "⠂", "⠒", "⠲", "⠴", "⠤", "⠄", "⠄", "⠤", "⠴", "⠲", "⠒", "⠂", "⠂", "⠒", "⠚", "⠙", "⠉", "⠁"]
            case .box6:
                // ⠈⠉⠋⠓⠒⠐⠐⠒⠖⠦⠤⠠⠠⠤⠦⠖⠒⠐⠐⠒⠓⠋⠉⠈
                return ["⠈", "⠉", "⠋", "⠓", "⠒", "⠐", "⠐", "⠒", "⠖", "⠦", "⠤", "⠠", "⠠", "⠤", "⠦", "⠖", "⠒", "⠐", "⠐", "⠒", "⠓", "⠋", "⠉", "⠈"]
            case .box7:
                // ⠁⠁⠉⠙⠚⠒⠂⠂⠒⠲⠴⠤⠄⠄⠤⠠⠠⠤⠦⠖⠒⠐⠐⠒⠓⠋⠉⠈⠈
                return ["⠁", "⠁", "⠉", "⠙", "⠚", "⠒", "⠂", "⠂", "⠒", "⠲", "⠴", "⠤", "⠄", "⠄", "⠤", "⠠", "⠠", "⠤", "⠦", "⠖", "⠒", "⠐", "⠐", "⠒", "⠓", "⠋", "⠉", "⠈", "⠈"]
            case .bar1:
                // [] [=] [==] [===] [====] [=====] [======] [=======] [========] [=========] [==========]
                return ["[]", "[=]", "[==]", "[===]", "[====]", "[=====]", "[======]", "[=======]", "[========]", "[=========]", "[==========]"]
            case .bar2:
                // [*---------] [-*--------] [--*-------] [---*------] [----*-----] [-----*----] [------*---] [-------*--] [--------*-] [---------*]
                return ["[*---------]", "[-*--------]", "[--*-------]", "[---*------]", "[----*-----]", "[-----*----]", "[------*---]", "[-------*--]", "[--------*-]", "[---------*]"]
            case .bar3:
                // █▒▒▒▒▒▒▒▒▒ ███▒▒▒▒▒▒▒ █████▒▒▒▒▒ ███████▒▒▒ ██████████
                return ["█▒▒▒▒▒▒▒▒▒", "███▒▒▒▒▒▒▒", "█████▒▒▒▒▒", "███████▒▒▒", "██████████"]
            case .bar4:
                // [ ] [=> ] [===> ] [=====> ] [======> ] [========> ] [==========> ] [============> ] [==============> ] [================> ] [==================> ] [===================>]
                return ["[ ]", "[=> ]", "[===> ]", "[=====> ]", "[======> ]", "[========> ]", "[==========> ]", "[============> ]", "[==============> ]", "[================> ]", "[==================> ]", "[===================>]"]
            case .bar5:
                // [------] [>-----] [>>----] [>>>---] [>>>>--] [>>>>>-] [>>>>>>] [->>>>>] [-->>>>] [--->>>] [---->>] [----->] [------] [-----<] [----<<] [---<<<] [--<<<<] [-<<<<<] [<<<<<<] [<<<<<-] [<<<<--] [<<<---] [<<----] [<-----]
                return ["[------]", "[>-----]", "[>>----]", "[>>>---]", "[>>>>--]", "[>>>>>-]", "[>>>>>>]", "[->>>>>]", "[-->>>>]", "[--->>>]", "[---->>]", "[----->]", "[------]", "[-----<]", "[----<<]", "[---<<<]", "[--<<<<]", "[-<<<<<]", "[<<<<<<]", "[<<<<<-]", "[<<<<--]", "[<<<---]", "[<<----]", "[<-----]"]
            case .bar6:
                // [------] [=-----] [==----] [===---] [====--] [=====-] [======] [-=====] [--====] [---===] [----==] [-----=] [------] [-----=] [----==] [---===] [--====] [-=====] [======] [=====-] [====--] [===---] [==----] [=-----]
                return ["[------]", "[=-----]", "[==----]", "[===---]", "[====--]", "[=====-]", "[======]", "[-=====]", "[--====]", "[---===]", "[----==]", "[-----=]", "[------]", "[-----=]", "[----==]", "[---===]", "[--====]", "[-=====]", "[======]", "[=====-]", "[====--]", "[===---]", "[==----]", "[=-----]"]
            case .spin1:
                // |/-\
                return ["|", "/", "-", "\\"]
            case .spin2:
                // +x
                return ["+", "x"]
            case .spin3:
                // v<^>
                return ["v", "<", "^", ">"]
            case .spin4:
                // ◴◷◶◵
                return ["◴", "◷", "◶", "◵"]
            case .spin5:
                // ◰◳◲◱
                return ["◰", "◳", "◲", "◱"]
            case .spin6:
                // ⬖ ⬘ ⬗ ⬙
                return ["⬖", "⬘", "⬗", "⬙"]
            case .spin7:
                // ⬒ ⬔ ⬓ ⬕
                return ["⬒", "⬔", "⬓", "⬕"]
            case .spin8:
                // ◐◓◑◒
                return ["◐", "◓", "◑", "◒"]
            case .spin9:
                // ▌▄▐▀
                return ["▌", "▄", "▐", "▀"]
            case .spin10:
                // ▖▘▝▗
                return ["▖", "▘", " ", "▝", "▗"]
            case .spin11:
                // ←↑→↓
                return ["←", "↑", "→", "↓"]
            case .spin12:
                // ←↖↑↗→↘↓↙
                return ["←", "↖", "↑", "↗", "→", "↘", "↓", "↙"]
            case .spin13:
                // 🕐 🕑 🕒 🕓 🕔 🕕 🕖 🕗 🕘 🕙 🕚 🕛
                return ["🕐", "🕑", "🕒", "🕓", "🕔", "🕕", "🕖", "🕗", "🕘", "🕙", "🕚", "🕛"]
            case .spin14:
                // 🌍 🌎 🌏
                return ["🌍", "🌎", "🌏"]
            }
        }

        fileprivate var length: Int {
            return self.frames.count
        }

    }

}
